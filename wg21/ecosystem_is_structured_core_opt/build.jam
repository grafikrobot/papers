#|
Copyright Ren√© Ferdinand Rivera Morell 2023
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
http://www.boost.org/LICENSE_1_0.txt)
|#

import asciidoctor ;

local name = ecosystem_is_structured_options ;
local docn = D3335 ;
local docr = R0 ;
local xxxx = $(docn)$(docr) ;

project /wg21_$(name)
    :   requirements
        <cxxstd>20
    ;

path-constant CSS : ../../stylesheets ;

local samples ;
for local sample in [ glob sample*.cpp ]
{
    samples += [ run $(sample) ] ;
    explicit $(sample) ;
}
alias samples : $(samples) ;

html $(name)_$(xxxx).html : proposal.adoc
	:
		<dependency>samples
		<flags>--attribute=docnumber=$(docn)
		<flags>--attribute=revnumber=$(docn)$(docr)
		<flags>--attribute=stylesheet=$(CSS)/golo.css
		<flags>--attribute=rouge-style=base16.solarized
	;
install html : $(name)_$(xxxx).html : <location>. ;

# actions json-validate
# {
# 	check-jsonschema -v --traceback-mode=full --schemafile "$(>[2])" "$(>[1])" && echo "passed" > "$(<)"
# }

# local validations ;
# for local json in [ glob example-*.json ]
# {
# 	validations += [ make $(json:B:S=.check)
# 		: $(json) std_opt-1.0.0.json
# 		: @json-validate ] ;
# 	explicit $(json:B:S=.check) ;
# }
# alias validate : $(validations) ;
